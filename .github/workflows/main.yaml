name: CI/CD Pipeline

on: [push, pull_request]

jobs:


  test:
    name: Run Tests
    env:
      PG_DB_NAME: ${{ secrets.PG_DB_NAME }}
      PG_USER_NAME: ${{ secrets.PG_USER_NAME }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_HOST: localhost
      PG_PORT: ${{ secrets.PG_PORT }}

      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
      CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGIBS }}

      OPEN_AI_API_KEY: ${{ secrets.OPEN_API_API_KEY }}
      WHISPER_MODEL: ${{ secrets.WHISPER_MODEL }}

      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        cd ./auto_checklist
        python3 manage.py test


  deploy:
    name: "Deploy to main"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Check out the source for deployment
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd /home/winstonchu/prod/photo_registry/auto_checklist_backend && git pull'

      - name: Stop the server
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd /home/winstonchu/prod/photo_registry/auto_checklist_backend && docker compose -f docker-compose.yaml down'

      - name: Start the server
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd /home/winstonchu/prod/photo_registry/auto_checklist_backend && docker compose -f docker-compose.yaml up --build -d'